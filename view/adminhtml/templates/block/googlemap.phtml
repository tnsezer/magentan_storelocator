<input type="hidden" id="lat" value="" />
<input id="pac-input" class="controls" type="text" placeholder="Search Box">
<div id="map"></div>
<script>
    var marker, map;
    // Initialize and add the map
    function initMap() {

        var mapElement = document.getElementById('map');

        map = new google.maps.Map(mapElement, {
            center: {lat: parseFloat(jQuery('input[name="position[lat]"]').val()), lng: parseFloat(jQuery('input[name="position[lng]"]').val())},
            zoom: 4,
            mapTypeId: 'roadmap',
            zoomControl: true,
            mapTypeControl: false,
            scaleControl: false,
            streetViewControl: false,
            rotateControl: true,
            fullscreenControl: true
        });

        // autocomplete config
        var input = document.getElementById('pac-input');
        var autocomplete = new google.maps.places.Autocomplete(input);

        // Create marker
        marker = new google.maps.Marker({
            map: map,
            draggable:true,
            animation: google.maps.Animation.DROP,
            position: new google.maps.LatLng(jQuery('input[name="position[lat]"]').val(), jQuery('input[name="position[lng]"]').val()),
            title: ''
        });
        marker.addListener('dragend', function () {
            position = marker.getPosition();
            setLatLng(position);
        });

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
            autocomplete.setBounds(map.getBounds());
        });

        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        autocomplete.addListener('place_changed', function() {
            var place = autocomplete.getPlace();

            marker.setMap(null);

            setMarker(place.geometry.location);
            marker.setTitle(place.name);
            marker.setMap(map);
            map.setZoom(16);

            setLatLng(place.geometry.location);
        });

    }

    function setMarker(position) {
        marker.setPosition(position);
        map.setCenter(position);
    }

    function setLatLng(pos) {
        jQuery('input[name="position[lat]"]').val( pos.lat() );
        jQuery('input[name="position[lng]"]').val( pos.lng() );
    }

    function toggleBounce() {
        if (this.getAnimation() !== null) {
            this.setAnimation(null);
        } else {
            this.setAnimation(google.maps.Animation.BOUNCE);
        }
    }
</script>
<!--Load the API from the specified URL
* The async attribute allows the browser to render the page while the API loads
* The key parameter will contain your own API key (which is not needed for this tutorial)
* The callback parameter executes the initMap() function
-->
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=<?php echo $block->getApi(); ?>&libraries=places&callback=initMap">
</script>